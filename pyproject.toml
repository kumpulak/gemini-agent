[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "gemini-agent"
version = "0.1.0"
description = "Agent wrapper for Gemini using the v1alpha Live API"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "python-dotenv>=1.1.0",
    "google-genai>=1.9.0",
    "google-auth>=2.38.0",
    "requests>=2.32.0",
    "typing-extensions>=4.13.0",
    "httpx>=0.28.0",
    "pydantic>=2.11.0",
    "websockets>=15.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "ruff>=0.11.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 150
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "N",  # pep8-naming
    "YTT", # flake8-2020
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "PTH", # use pathlib
    "SIM", # simplify
    "TID", # tidy imports
    "TCH", # type-checking
    "RUF", # ruff-specific rules
    "D",  # pydocstyle
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["agent", "utils", "tool_parser"]
force-single-line = false
case-sensitive = true

[tool.ruff.lint.pydocstyle]
convention = "google" 